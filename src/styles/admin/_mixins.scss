// _mixins.scss - Reusable SCSS Mixins
@use 'variables' as *;

// ===== RESPONSIVE BREAKPOINTS =====
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'small' or $breakpoint == 'sm' {
    @media (max-width: #{$breakpoint-sm - 1px}) {
      @content;
    }
  }
  @else if $breakpoint == 'medium' or $breakpoint == 'md' {
    @media (max-width: #{$breakpoint-md - 1px}) {
      @content;
    }
  }
  @else if $breakpoint == 'large' or $breakpoint == 'lg' {
    @media (max-width: #{$breakpoint-lg - 1px}) {
      @content;
    }
  }
  @else if $breakpoint == 'xl' {
    @media (max-width: #{$breakpoint-xl - 1px}) {
      @content;
    }
  }
  @else if $breakpoint == '2xl' {
    @media (max-width: #{$breakpoint-2xl - 1px}) {
      @content;
    }
  }
}

@mixin respond-from($breakpoint) {
  @if $breakpoint == 'small' or $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  }
  @else if $breakpoint == 'medium' or $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  }
  @else if $breakpoint == 'large' or $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
  @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
  @else if $breakpoint == '2xl' {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// ===== GLASS MORPHISM =====
@mixin glass-morphism($opacity: 0.25, $blur: 20px, $border-opacity: 0.18) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
}

@mixin glass-morphism-dark($opacity: 0.25, $blur: 20px, $border-opacity: 0.18) {
  background: rgba(0, 0, 0, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
}

// ===== FLEXBOX UTILITIES =====
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

// ===== POSITIONING =====
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// ===== TYPOGRAPHY =====
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin heading-style($size: 'base', $weight: 'semibold') {
  font-family: $font-family-headings;
  
  @if $size == 'xs' {
    font-size: $font-size-xs;
  } @else if $size == 'sm' {
    font-size: $font-size-sm;
  } @else if $size == 'base' {
    font-size: $font-size-base;
  } @else if $size == 'lg' {
    font-size: $font-size-lg;
  } @else if $size == 'xl' {
    font-size: $font-size-xl;
  } @else if $size == '2xl' {
    font-size: $font-size-2xl;
  } @else if $size == '3xl' {
    font-size: $font-size-3xl;
  } @else if $size == '4xl' {
    font-size: $font-size-4xl;
  } @else if $size == '5xl' {
    font-size: $font-size-5xl;
  }
  
  @if $weight == 'light' {
    font-weight: $font-weight-light;
  } @else if $weight == 'normal' {
    font-weight: $font-weight-normal;
  } @else if $weight == 'medium' {
    font-weight: $font-weight-medium;
  } @else if $weight == 'semibold' {
    font-weight: $font-weight-semibold;
  } @else if $weight == 'bold' {
    font-weight: $font-weight-bold;
  } @else if $weight == 'extrabold' {
    font-weight: $font-weight-extrabold;
  }
}

// ===== BUTTONS =====
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: $button-border-radius;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-base;
  user-select: none;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-size($size: 'base') {
  @if $size == 'sm' {
    padding: $button-padding-sm;
    font-size: $font-size-sm;
  } @else if $size == 'base' {
    padding: $button-padding-base;
    font-size: $font-size-base;
  } @else if $size == 'lg' {
    padding: $button-padding-lg;
    font-size: $font-size-lg;
  }
}

@mixin button-variant($bg-color, $text-color: $color-white, $hover-bg: null, $hover-text: null) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover:not(:disabled) {
    background-color: if($hover-bg, $hover-bg, darken($bg-color, 10%));
    color: if($hover-text, $hover-text, $text-color);
    transform: translateY(-1px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// ===== FORMS =====
@mixin input-base {
  width: 100%;
  padding: $input-padding;
  border: 1px solid $input-border-color;
  border-radius: $input-border-radius;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  color: $color-text-primary;
  background-color: $color-background-primary;
  transition: all $transition-base;
  
  &:focus {
    outline: none;
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-shadow;
  }
  
  &::placeholder {
    color: $color-text-muted;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: $color-gray-100;
  }
}

// ===== CARDS =====
@mixin card-base {
  background-color: $color-background-primary;
  border-radius: $card-border-radius;
  padding: $card-padding;
  box-shadow: $card-shadow;
  transition: all $transition-base;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// ===== ANIMATIONS =====
@mixin fade-in($duration: $transition-base) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-in-up($duration: $transition-base) {
  animation: slideInUp $duration ease-out;
}

@mixin slide-in-left($duration: $transition-base) {
  animation: slideInLeft $duration ease-out;
}

@mixin pulse($duration: 2s) {
  animation: pulse $duration ease-in-out infinite;
}

// ===== SCROLLBARS =====
@mixin custom-scrollbar($width: 8px, $track-color: transparent, $thumb-color: rgba(0, 0, 0, 0.2)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
}

// ===== LOADING STATES =====
@mixin skeleton-loading {
  background: linear-gradient(90deg, $color-gray-200 25%, $color-gray-100 50%, $color-gray-200 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
}

// ===== UTILITIES =====
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// ===== KEYFRAME ANIMATIONS =====
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}